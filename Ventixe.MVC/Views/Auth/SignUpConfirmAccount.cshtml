@model SignUpConfirmAccountViewModel

@{
    ViewData["Title"] = "Verify your email address";
}


<form asp-controller="Auth" asp-action="HandleSignUpConfirmAccount" method="post" novalidate>
    <input type="hidden" asp-for="Email" value="@TempData["Email"]?.ToString()" />

    <div class="card auth-card">

        <div class="card-header auth-title">
            <h2>@ViewData["Title"]</h2>

            <p class="auth-info">
                An email with a verification code was sent to @ViewBag.MaskedEmail. 
                Please enter the code below to verify your email address.
            </p>

            @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
            {
                <div class="form-errormessage">
                    @ViewBag.ErrorMessage
                </div>
            }
        </div>

        <div class="auth-card-body card-body">

            <div class="form-group verification-code-wrapper">
                @for (int i = 0; i < 6; i++)
                {
                    <input asp-for="VerificationCode" type="text" maxlength="1" class="verification-code-input" id="box-@i" />
                }
            </div>

            <button type="submit" class="btn btn-primary">Verify & Continue</button>
        </div>

        <div class="card-footer">
            <div class="additional-info center">
                Already have an account? <a asp-controller="Auth" asp-action="Login">Sign in</a>
            </div>
        </div>

    </div>

</form>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        const boxes = document.querySelectorAll(".verification-code-input");
        const hiddenInput = document.querySelector("input[name='Code']");
        boxes[0].focus();

        boxes.forEach((box, index) => {
            box.addEventListener("input", function () {
                if (box.value.length === 1 && index < boxes.length - 1) {
                    boxes[index + 1].focus();
                }
                hiddenInput.value = Array.from(boxes).map(b => b.value).join("");
            });
            box.addEventListener("keydown", function (e) {
                if (e.key === "Backspace" && box.value.length === 0 && index > 0) {
                    boxes[index - 1].focus();
                }
            });
        });
    });
</script>